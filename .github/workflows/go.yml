name: Go

on:
  push:
    branches: [ "v2" ]
    tags:
      - "*"
  pull_request:
    branches: [ "v2" ]


jobs:
  configure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
        
  upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: linux-x86_x64
            os: linux
            arch: amd64
          - name: linux-arm64
            os: linux
            arch: arm64
          - name: linux-arm32
            os: linux
            arch: arm
          - name: windows-amd64
            os: windows
            arch: amd64
          - name: windows-amd32
            os: windows
            arch: 386
          - name: macos-intel64
            os: darwin
            arch: amd64
          - name: macos-AppleSilicon
            os: darwin
            arch: arm64
    
    steps:
    - uses: actions/checkout@v3
    - name: create build dirs
      run: mkdir ${{ matrix.name }}
      
    - name: Build
      run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o ${{ matrix.name }} ./...

    - name: Get Git Version String
      working-directory: ${{github.workspace}}
      run: |
        if ${{ startsWith(github.ref, 'refs/tags/') }}; then
          echo "app_version=${{ github.ref_name }}" >> $GITHUB_ENV
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then            echo "app_version=$(echo "${{ github.head_ref }}" | sed -r 's/\//_/g')-$(git rev-parse --short "${{ github.event.pull_request.head.sha }}")" >> $GITHUB_ENV
        else
          echo "app_version=$(git rev-parse --abbrev-ref HEAD | sed -r 's/\//_/g')-$(git describe --always)" >> $GITHUB_ENV
        fi
    - name: Debug Print
      run: |
        echo ${{ env.app_version }}

    - name: Chmod +x
      run: chmod +x mqtt-re*
      
    - uses: actions/upload-artifact@v2
      with:
        name: mqtt-record-replay-${{ matrix.name }}-${{ env.app_version }}
        path: ${{ matrix.name }}/mqtt-*

    - uses: svenstaro/upload-release-action@v2
      name: Upload binaries to release
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.name }}/mqtt-*
        file_glob: true
        tag: ${{ github.ref }}
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        overwrite: true
